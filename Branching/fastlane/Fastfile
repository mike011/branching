# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  ###################### Version & Build Number Automation ######################

  desc "Increment the bundle number"
  lane :set_version_to_release do
    branch=git_branch
    sh "git checkout release"
    release_version=get_build_number
    puts "release version is: " + release_version

    sh "git checkout " + branch
    sh '/usr/libexec/PlistBuddy -c "Set :CFBundleVersion ' + release_version + '" "../Branching/Info.plist"'
    sh '/usr/libexec/PlistBuddy -c "Set :CFBundleVersion ' + release_version + '" "../BranchingTests/Info.plist"'
    sh 'cd .. && agvtool new-version ' + release_version + '&& cd ./fastlane'

    commit_version_to_git
  end

 desc "Increment the version & build number (patch)"
 lane :increment_patch do
   increment_version_number(bump_type: "patch")
   increment_build_number(build_number: get_version_number + ".1")
 end

 desc "Increment the version & build number (minor)"
 private_lane :increment_minor do
   increment_version_number(bump_type: "minor")
   increment_build_number(build_number: get_version_number + ".1")
 end

 desc "Increment the version & build number (major)"
 private_lane :increment_major do
   increment_version_number(bump_type: "major")
   increment_build_number(build_number: get_version_number + ".1")
 end

 desc "Commits a new version into Git"
 private_lane :commit_version_to_git do
   command = "cd .. &&"
   command += "git commit -m 'Version set' Branching.xcodeproj/project.pbxproj Branching/Info.plist BranchingTests/Info.plist &&"
   command += "git push origin HEAD:" + git_branch
   sh command
 end
end
